{
  "name": "cycode",
  "displayName": "Cycode (beta)",
  "icon": "resources/cycode124.png",
  "description": "Cycode vscode extension. This extension is currently in beta.",
  "repository": {
    "type": "git",
    "url": "https://github.com/cycodehq-public/vscode-extension"
  },
  "homepage": "https://cycode.com/",
  "version": "0.0.3",
  "publisher": "cycode",
  "engines": {
    "vscode": "^1.63.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Cycode",
      "id": "cycode",
      "properties": {
        "cycode.cliPath": {
          "type": "string",
          "default": "",
          "description": "Path to the Cycode CLI executable. Run `which cycode` in your terminal to find the path.",
          "markdownDescription": "Path to the Cycode CLI executable. Run `which cycode` in your terminal to find the path."
        },
        "cycode.scanOnSave": {
          "type": "boolean",
          "default": "true",
          "description": "Scan your files for secrets upon save. If auto-scan disabled you can still trigger scans manually from the command palette. Open the command palette with `Ctrl+Shift+P` and search for `Cycode: Scan for vulnerabilities`.",
          "markdownDescription": "Perform a scan on save"
        },
        "cycode.additionalParameters": {
          "type": "string",
          "default": "",
          "markdownDescription": "Additional parameters to pass to the Cycode CLI. See the [Cycode CLI documentation](https://github.com/cycodehq-public/cycode-cli#install-cycode-cli)"
        },
        "cycode.apiUrl": {
          "type": "string",
          "default": "",
          "markdownDescription": "Changes the API URL when running scans. Equivalent to setting CYCODE_API_URL env var in the CLI."
        },
        "cycode.appUrl": {
          "type": "string",
          "default": "",
          "markdownDescription": "Changes the app URL when running scans. Equivalent to setting CYCODE_APP_URL env var in the CLI."
        }
      }
    },
    "commands": [
      {
        "command": "cycode.scan",
        "title": "Cycode: Scan for vulnerabilities"
      },
      {
        "command": "cycode.auth",
        "title": "Cycode: Authenticate with service"
      },
      {
        "command": "cycode.install",
        "title": "Cycode: Install CLI with pip3"
      },
      {
        "command": "cycode.uninstall",
        "title": "Cycode: Uninstall cycode CLI"
      },
      {
        "command": "cycode.ignore",
        "title": "Cycode: ignore rule",
        "when": "false"
      },
      {
        "command": "cycode.openSettings",
        "title": "Cycode: Open Cycode settings"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cycode",
          "title": "Cycode",
          "icon": "resources/cycode24.png"
        }
      ],
      "panel": [
        {
          "id": "cycode",
          "title": "Cycode",
          "icon": "resources/cycode24.png"
        }
      ]
    },
    "views": {
      "cycode": [
        {
          "type": "webview",
          "id": "activity_bar.login",
          "name": "login",
          "when": "!cycode:auth.isAuthed && !cycode:auth.isAuthenticating"
        },
        {
          "type": "webview",
          "id": "activity_bar.authenticating",
          "name": "login",
          "when": "cycode:auth.isAuthenticating"
        },
        {
          "type": "webview",
          "id": "activity_bar.scanView",
          "name": "scan",
          "when": "cycode:auth.isAuthed"
        }
      ]
    },
    "icons": {
      "cycode-logo": {
        "description": "Cycode icon",
        "default": {
          "fontPath": "./resources/cycode.woff",
          "fontCharacter": "\\E800"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "8.1.0",
    "@types/mocha": "10.0.1",
    "@types/node": "16.x",
    "@types/shelljs": "0.8.11",
    "@types/vscode": "1.63.0",
    "@typescript-eslint/eslint-plugin": "5.53.0",
    "@typescript-eslint/parser": "5.53.0",
    "@vscode/test-electron": "2.2.3",
    "eslint": "8.34.0",
    "glob": "8.1.0",
    "mocha": "10.2.0",
    "ts-loader": "9.4.2",
    "typescript": "4.9.5",
    "webpack": "5.76.0",
    "webpack-cli": "5.0.1"
  },
  "dependencies": {
    "semver": "7.5.3",
    "shelljs": "0.8.5"
  }
}
